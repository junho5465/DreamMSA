server:
  port: 8000

eureka:
  client:
    fetch-registry: true # 유레카 클라이언트 활성화
    register-with-eureka: true # 유레카 클라이언트 활성화
    service-url:
      defaultZone: http://localhost:8761/eureka # 유레카 클라이언트로 등록
       
spring:
  application:
    name: gateway-service


  cloud:
    gateway:
      default-filters:
        -  TokenRelay
      routes:          
        - id: menu-service
          uri: lb://MENU-SERVICE # uri: http://localhost:8001 # 포워딩 할 주소, http://localhost:8000/menu 로 들어오면 http://localhost:8001로 포워딩
          predicates:
            - Path=/menu/** # 해당 gateway 서버의 /menu/**로 들어오는 menu-service로 인식하겠다는 조건
          filters:
            - RewritePath=/menu/?(?<segment>.*), /$\{segment}   
              
        - id: product-service
          uri: lb://PRODUCT-SERVICE 
          predicates:
            - Path=/product/** 
          filters:
            - RewritePath=/product/?(?<segment>.*), /$\{segment}                      
              
        - id: manage-service
          uri: lb://MANAGE-SERVICE 
          predicates:
            - Path=/manage/** 
          filters:
            - RewritePath=/manage/?(?<segment>.*), /$\{segment}
        
        - id: loan-service
          uri: lb://LOAN-SERVICE 
          predicates:
            - Path=/loan/** 
          filters:
            - RewritePath=/loan/?(?<segment>.*), /$\{segment} 
                                 
        - id: list-service
          uri: lb://LIST-SERVICE 
          predicates:
            - Path=/list/** 
          filters:
            - RewritePath=/list/?(?<segment>.*), /$\{segment}   
            
        - id: save-service
          uri: lb://SAVE-SERVICE 
          predicates:
            - Path=/save/** 
          filters:
            - RewritePath=/save/?(?<segment>.*), /$\{segment}
                            
        - id: user-service
          uri: lb://USER-SERVICE 
          predicates:
            - Path=/user/** 
          filters:
            - RewritePath=/user/?(?<segment>.*), /$\{segment}
            
        - id: status-service
          uri: lb://STATUS-SERVICE 
          predicates:
            - Path=/status/** 
          filters:
            - RewritePath=/status/?(?<segment>.*), /$\{segment}

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://192.168.1.54:8080/auth/realms/MSA
            user-name-attribute: preferred_username
        registration:
          keycloak:
#            provider: keycloak
            client-id: spring-gateway-client
            client-secret: WEcACPUTWPfuhPrEz3bBaHcl7OLLmYX1
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
                
            
keycloak:
  realm: MSA
  resource: spring-gateway-client
  auth-server-url: http://192.168.1.54:8080/auth
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            issuer-uri: http://192.168.1.54:8080/auth/realms/MSA
#            user-name-attribute: preferred_username
#        registration: 
#          keycloak:
#            client-id: memberService
#            client-secret: RePeZAfKZ9XFiFc2Z5LzzFstYeduPQSd
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://localhost:8000/user/auth"


  