# eureka 설정은 git에 있음.(https://github.com/JongbaekKIm/Dream_MSA.git)
server:
  port: 8007

spring:
  application:
    name: list-service
  config:              # gradle에 config 추가.
   import: optional:configserver:http://localhost:8888  # config 서버 위치
   use-legacy-processing: true #unable to load config data~ 오류 발생시 사용
  datasource: #datasource 부터 mybatis 까지 외부 실패
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.51:3306/dream?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: dream
    password: 1234
  security:
    oauth2:
     resourceserver:
        jwt:
          jwk-set-uri: http://192.168.1.54:8080/auth/realms/MSA/protocol/openid-connect/certs

keycloak:
  realm: MSA
  bearer-only: true
  ssl-required: external
  resource: spring-gateway-client
  auth-server-url: http://192.168.1.54:8080/auth
  credentials:
    secret: WEcACPUTWPfuhPrEz3bBaHcl7OLLmYX1
   
mybatis:
  mapper-locations: /mapper/**/*.xml
  type-aliases-package: com.dream.list.dto


#logging:
#  file:
#    name: ${user.dir}/log/test.log  # 로깅 파일 위치이다.
#    max-history: 7 # 로그 파일 삭제 주기이다. 7일 이후 로그는 삭제한다.
#    max-size: 10MB  # 로그 파일 하나당 최대 파일 사이즈이다.
##  level:  # 각 package 별로 로깅 레벨을 지정할 수 있다.
##    com.project.study : error
##    com.project.study.controller : debug
    
#외부
## 유레카 클라이언트 설정    
#eureka:
#  instance:
#    instance-id:  list-microservice-instance  # eureka에 등록되는 id 값
#  client:
#    register-with-eureka: true  # 유레카에 등록할지 여부.
#    fetch-registry: true  # 유레카에서 조회할지 여부
#    service-url:
#      defaultZone: http://localhost:8761/eureka # 서비스를 등록할 서버 주소를 지정

         